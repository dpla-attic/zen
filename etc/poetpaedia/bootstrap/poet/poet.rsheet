from string import Template
from amara.thirdparty import json

# Note that the values used here for, e.g. ttl, are used in a test suite. If you need to change them,
# please update the test in test/test_moin.py

#Declare transform services
strip = service(u'http://purl.org/xml3k/akara/builtins/string/strip')
parsedate = service(u'http://purl.org/com/zepheira/zen/temporal/parse-date')
obj_urls = service(u'http://purl.org/com/zepheira/zen/moinmodel/get-obj-urls')
link_urls = service(u'http://purl.org/com/zepheira/zen/moinmodel/get-link-urls')

#Used to serve requests for a raw Python dictionary
@handles('GET', 'raw/pydict')
def objectify(resource):
    #Data extraction
    bio = resource.definition_section(u'poet:bio')

    #Output
    obj = {
      u'id': resource.rest_uri,
      u'name': strip(U(bio[u'poet:name'])),
      u'born': U(parsedate(U(bio[u'poet:born']))),
      u'died': U(parsedate(U(bio[u'poet:died']))),
      u'images': obj_urls(bio[u'poet:image']),
      u'wikipedia': link_urls(bio[u'poet:wikipedia']),
      u'description': U(resource.section(u'About')),
    }
    return obj

#Used to serve normal HTTP GET requests for the default representation of this resource
@handles('GET', ttl=3600)
def get_poet(resource):
    return json.dumps(objectify(resource), indent=4)

#A simple text/plain representation, used in tests
@handles('GET','text/plain',ttl=86400)
def get_poet(resource):
    poet = objectify(resource)
    return poet[u'name'] + ': ' + poet[u'description']

#A text/html representation, used in tests
@handles('GET','text/html',ttl=43200)
def get_poet(resource):
    poet = objectify(resource)
    return "<html><head><title>%s</title></head><body><p>%s</p></body></html" % (poet[u'name'], poet[u'description'])

#Used to serve requests for a collection of resources, in raw form
@handles('collect', 'raw/pydict')
def collect_poets(resources):
    return json.dumps([objectify(resource) for resource in resources], indent=4)

#Used to process HTTP PUT requests to update this resource
@handles('PUT')
def put_poet(resource_type, body):
    data = json.loads(body)
    items = u'\n'.join([ u' * ' + linkify(item, resource_type.wrapped_base) for item in data[u'items'] ])
    return COLLECTION_PAGE_TEMPLATE.substitute(locals())


COLLECTION_PAGE_TEMPLATE = Template(u'''\
= collection:items =

$items

= akara:metadata =

 akara:type:: [[poetpaedia/collection]]
''')

